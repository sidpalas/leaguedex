name: CI/CD

on:
  push:
    branches: [feature/dockerize-app]
  release:
    types:
      - created

# Trigger on master for staging
# Trigger on release for production
# Determine docker image tag
  # staging -> commit sha
  # production -> release tag
# build images
# push images (dockerhub)
# Setting actual secret values (currently uses .env)
# deploy to correct droplet

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    steps:  
    - uses: actions/checkout@v2
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set ENV
      run: |-
        echo ${GITHUB_REF##*/}
        echo ${GITHUB_SHA}

        if [ ${GITHUB_REF##*/} = "dockerize-app" ]; then
          echo "ENV=staging" >> $GITHUB_ENV
          echo "DOCKER_TAG=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "DROPLET_IP=${{ secrets.STAGING_DROPLET_IP }}" >> $GITHUB_ENV
        else 
          # TODO: Test after merging to master
          echo "ENV=prod" >> $GITHUB_ENV
          echo "DOCKER_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "DROPLET_IP=${{ secrets.PRODUCTION_DROPLET_IP }}" >> $GITHUB_ENV
        fi

    - name: Build Docker Images
      run: make build-images

    - name: Push Docker Images
      run: make push-images
    
    - name: Deploy to Droplet
      run: |
        make copy-compose-file
        DOCKER_TAG=$(DOCKER_TAG) \
        API_KEY=${{ secrets.RIOT_API_KEY }} \
        ACCESS_TOKEN_SECRET=${{ secrets.AUTH_ACCESS_TOKEN_SECRET }} \
        REFRESH_TOKEN_SECRET=${{ secrets.AUTH_REFRESH_TOKEN_SECRET}} \
        SENDGRID_API_KEY=EMAIL_DISABLED \
        SENDGRID_EMAIL=EMAIL_DISABLED \
        DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
        DATABASE_URL=postgresql://postgres:${{ secrets.DATABASE_PASSWORD }}@db:5432/leaguedex?schema=leaguedex \
        make run_production
        
        
